<button class="darkmode-toggle" title="Toggle theme">
  <svg
    xmlns="http://www.w3.org/2000/svg"
    aria-hidden="true"
    height="1lh"
    width="1lh"
    viewBox="0 0 32 32"
    fill="currentColor"
  >
    <clipPath id="theme-toggle__within__clip">
      <path d="M0 0h32v32h-32ZM6 16A1 1 0 0026 16 1 1 0 006 16"></path>
    </clipPath>

    <g clip-path="url(#theme-toggle__within__clip)">
      <path 
        d="M30.7 21.3 27.1 16l3.7-5.3c.4-.5.1-1.3-.6-1.4l-6.3-1.1-1.1-6.3c-.1-.6-.8-.9-1.4-.6L16 5l-5.4-3.7c-.5-.4-1.3-.1-1.4.6l-1 6.3-6.4 1.1c-.6.1-.9.9-.6 1.3L4.9 16l-3.7 5.3c-.4.5-.1 1.3.6 1.4l6.3 1.1 1.1 6.3c.1.6.8.9 1.4.6l5.3-3.7 5.3 3.7c.5.4 1.3.1 1.4-.6l1.1-6.3 6.3-1.1c.8-.1 1.1-.8.7-1.4zM16 25.1c-5.1 0-9.1-4.1-9.1-9.1 0-5.1 4.1-9.1 9.1-9.1s9.1 4.1 9.1 9.1c0 5.1-4 9.1-9.1 9.1z"
      ></path>
    </g>

    <path
      class="circle"
      d="M16 7.7c-4.6 0-8.2 3.7-8.2 8.2s3.6 8.4 8.2 8.4 8.2-3.7 8.2-8.2-3.6-8.4-8.2-8.4zm0 14.4c-3.4 0-6.1-2.9-6.1-6.2s2.7-6.1 6.1-6.1c3.4 0 6.1 2.9 6.1 6.2s-2.7 6.1-6.1 6.1z"
    ></path>

    <path
      class="inner"
      d="M16 9.5c-3.6 0-6.4 2.9-6.4 6.4s2.8 6.5 6.4 6.5 6.4-2.9 6.4-6.4-2.8-6.5-6.4-6.5z"
    ></path>
  </svg>
</button>

<script>// @ts-nocheck
  const root = document.documentElement;
  const btn = document.querySelector('.darkmode-toggle');

  function toggleColorScheme() {
    root.dataset.colorScheme = root.dataset.colorScheme === 'light'
      ? 'dark'
      : 'light';

    localStorage.setItem('color-scheme', root.dataset.colorScheme);
  }

  function animate(x, y) {
    const radius = Math.hypot(
      Math.max(x, innerWidth - x),
      Math.max(y, innerHeight - y)
    );

    root.animate({
      clipPath: [
        `circle(0 at ${x}px ${y}px)`,
        `circle(${radius}px at ${x}px ${y}px)`,
      ],
    }, {
      duration: 400,
      easing: 'cubic-bezier(1, 0, 1, 1)',
      fill: 'both',
      pseudoElement: '::view-transition-new(toggle-color-scheme)',
    });
  }

  btn.addEventListener('click', e => {
    if(!document.startViewTransition) return toggleColorScheme();

    root.style.viewTransitionName = 'toggle-color-scheme';

    const { ready, finished } = document.startViewTransition(toggleColorScheme);

    ready.then(() => animate(e.clientX, e.clientY));
    finished.finally(() => { root.style.viewTransitionName = ''; });
  });
</script>

<style is:global>
  ::view-transition-new(toggle-color-scheme),
  ::view-transition-old(toggle-color-scheme) { animation: none; }
</style>

<style>
  button {
    font-size: inherit;
    padding: 0;
    border: 0;
    background: none;
    cursor: pointer;

    &:hover { color: var(--accent); }

    :global([data-color-scheme="dark"]) & {
      .circle { transform: scale(1.5); }
      .inner { transform: translate3d(3px, -3px, 0) scale(1.2); }
      g path { transform: scale(0.65); }
    }
  }

  svg {
    * {
      transform-origin: center;
      transition: transform 500ms cubic-bezier(0, 0, 0, 1.25);
    }
  }
</style>
