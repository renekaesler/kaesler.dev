---
import "#src/styles/base.css";
import "#src/styles/layout.css";
import "#src/styles/shame.css";

import { SITE } from "#config";
import Header from "#components/Header.astro";
import Footer from "#components/Footer.astro";

interface Props {
  brandAsHeading?: boolean;
  canonical?: string
  title?: string
  author?: string
  description?: string
}

const { 
  brandAsHeading,
  title = SITE.title,
  description = SITE.description,
  author = SITE.author,
  canonical = new URL(Astro.url.pathname, Astro.url)
} = Astro.props;
---

<!doctype html>
<html lang={SITE.lang}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content={author} />

    <title>{title}</title>

    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="canonical" href={canonical} />

    <script is:inline>
      (root => {
        function prefersColorScheme(mode) {
          return matchMedia?.(`(prefers-color-scheme: ${mode})`)?.matches;
        }

        function preferredColorScheme(defaultColorScheme = 'light') {
          return prefersColorScheme('light')
            ? 'light'
            : prefersColorScheme('dark')
            ? 'dark'
            : defaultColorScheme;
        }

        const colorScheme = localStorage.getItem('color-scheme');
        root.dataset.colorScheme = colorScheme ?? preferredColorScheme('dark');
      })(document.documentElement);
    </script>
  </head>
  <body>
    <Header brandAsHeading={brandAsHeading} />

    <main>
      <slot />
    </main>

    <Footer />
  </body>
</html>

<style is:global>
  ::view-transition-old(toggle-color-scheme) { animation: none; }

  ::view-transition-new(toggle-color-scheme) {
    animation: 400ms cubic-bezier(1, 0, 1, 1) both reveal;
  }

  @keyframes reveal {
    from { clip-path: circle(0 at 100% 0); }
    to { clip-path: circle(calc(max(100vw, 100vh) * sqrt(2)) at 100% 0); }
  }
</style>

<style>
  main { margin-block: var(--space-l); }
</style>

